name: CI-CD

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push Go API
      run: |
        docker build -t ${{ steps.login-ecr.outputs.registry }}/go-api:latest ./go-api
        docker push ${{ steps.login-ecr.outputs.registry }}/go-api:latest

    - name: Build and push Py Worker
      run: |
        docker build -t ${{ steps.login-ecr.outputs.registry }}/py-worker:latest ./py-worker
        docker push ${{ steps.login-ecr.outputs.registry }}/py-worker:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
            docker pull ${{ secrets.ECR_REGISTRY }}/go-api:latest
            docker pull ${{ secrets.ECR_REGISTRY }}/py-worker:latest
            docker-compose -f ~/deploy/docker-compose.yml up -d --remove-orphans
